[
["diagnostic-test.html", "Chapter 3 Diagnostic Test", " Chapter 3 Diagnostic Test In this chapter, we will use mada package to analyze the data, so first we need to use library command to load the add on the package. You can view all the methods for meta analysis of diagnostic test of mada package by typing help(meta). library(mada) "],
["exercise-1-nishiumra.html", "Exercise 1 - Nishiumra", " Exercise 1 - Nishiumra Then we read in the csv file without setting the working directory, you can refer to this chapter 1.1. Table 3.1 is the first 5 rows of Nishiumra data. # Read data nishimura &lt;- read.csv(&quot;~/Desktop/meta/Diagnostic Test/Nishimura-2007.csv&quot;) print(nishimura) Table 3.1: A table of the first 5 rows of Nishiumra data. test study_id ccpgeneration TP FP FN TN sens spec id Anti-CCP Aotsuka 2005 CCP2 115 17 16 73 0.878 0.811 1 Anti-CCP Bas 2003 CCP1 110 24 86 215 0.561 0.900 2 Anti-CCP Bizzaro 2001 CCP1 40 5 58 227 0.408 0.978 3 Anti-CCP Bombardieri 2004 CCP2 23 0 7 39 0.767 1.000 4 Anti-CCP Choi 2005 CCP2 236 20 88 231 0.728 0.920 5 1a. Descriptive First of all, use the madad command to descriptive summary of nishimura data, and save the results in the object “madad.nishimura.” madad.nishimura &lt;- madad(nishimura) print(madad.nishimura) ## Descriptive summary of nishimura with 37 primary studies. ## Confidence level for all calculations set to 95 % ## Using a continuity correction of 0.5 if applicable ## ## Diagnostic accuracies ## sens 2.5% 97.5% spec 2.5% 97.5% ## [1,] 0.875 0.808 0.921 0.808 0.715 0.876 ## [2,] 0.561 0.491 0.628 0.898 0.853 0.930 ## [3,] 0.409 0.317 0.508 0.976 0.948 0.989 ## [4,] 0.758 0.585 0.875 0.988 0.891 0.999 ## [5,] 0.728 0.677 0.773 0.919 0.878 0.946 ## [6,] 0.898 0.814 0.946 0.919 0.862 0.954 ## [7,] 0.752 0.667 0.821 0.969 0.927 0.987 ## [8,] 0.642 0.560 0.716 0.981 0.941 0.994 ## [9,] 0.583 0.451 0.705 0.993 0.940 0.999 ## [10,] 0.790 0.693 0.862 0.819 0.687 0.904 ## [11,] 0.708 0.546 0.831 0.942 0.829 0.982 ## [12,] 0.407 0.318 0.501 0.988 0.948 0.997 ## [13,] 0.801 0.706 0.871 0.976 0.948 0.990 ## [14,] 0.630 0.570 0.685 0.912 0.839 0.954 ## [15,] 0.631 0.480 0.760 0.646 0.447 0.804 ## [16,] 0.427 0.368 0.488 0.971 0.924 0.989 ## [17,] 0.564 0.423 0.695 0.974 0.895 0.994 ## [18,] 0.806 0.706 0.878 0.953 0.923 0.972 ## [19,] 0.550 0.464 0.633 0.964 0.890 0.989 ## [20,] 0.659 0.563 0.743 0.901 0.842 0.940 ## [21,] 0.987 0.888 0.999 0.955 0.883 0.983 ## [22,] 0.413 0.322 0.509 0.975 0.922 0.992 ## [23,] 0.577 0.516 0.636 0.939 0.881 0.969 ## [24,] 0.806 0.743 0.857 0.910 0.845 0.950 ## [25,] 0.699 0.581 0.795 0.980 0.961 0.990 ## [26,] 0.570 0.422 0.706 0.958 0.891 0.984 ## [27,] 0.466 0.364 0.570 0.927 0.876 0.958 ## [28,] 0.739 0.679 0.791 0.944 0.919 0.961 ## [29,] 0.483 0.405 0.563 0.954 0.924 0.972 ## [30,] 0.441 0.239 0.665 0.954 0.862 0.986 ## [31,] 0.875 0.845 0.900 0.888 0.838 0.924 ## [32,] 0.644 0.587 0.696 0.970 0.949 0.983 ## [33,] 0.536 0.457 0.613 0.957 0.929 0.975 ## [34,] 0.774 0.749 0.798 0.965 0.957 0.972 ## [35,] 0.579 0.516 0.639 0.984 0.968 0.992 ## [36,] 0.393 0.324 0.466 0.960 0.914 0.982 ## [37,] 0.471 0.402 0.542 0.977 0.954 0.988 ## ## Test for equality of sensitivities: ## X-squared = 632, df = 36, p-value = &lt;2e-16 ## Test for equality of specificities: ## X-squared = 235, df = 36, p-value = &lt;2e-16 ## ## ## Diagnostic OR and likelihood ratios ## DOR 2.5% 97.5% posLR 2.5% 97.5% negLR 2.5% 97.5% ## [1,] 29.40 14.12 61.21 4.55 2.97 6.97 0.155 0.097 0.246 ## [2,] 11.24 6.79 18.60 5.50 3.70 8.16 0.489 0.415 0.576 ## [3,] 28.64 11.23 73.01 17.33 7.34 40.92 0.605 0.513 0.714 ## [4,] 247.53 13.51 4534.35 60.65 3.83 959.72 0.245 0.131 0.457 ## [5,] 30.18 18.06 50.43 8.95 5.88 13.62 0.296 0.247 0.355 ## [6,] 99.46 39.20 252.37 11.08 6.34 19.38 0.111 0.059 0.211 ## [7,] 96.07 34.42 268.18 24.57 9.84 61.37 0.256 0.187 0.350 ## [8,] 92.83 25.35 339.93 33.89 9.87 116.41 0.365 0.292 0.456 ## [9,] 211.40 12.44 3593.41 88.67 5.55 1417.63 0.419 0.306 0.575 ## [10,] 17.02 6.90 41.96 4.37 2.35 8.10 0.257 0.168 0.393 ## [11,] 39.34 9.09 170.36 12.18 3.59 41.31 0.310 0.185 0.518 ## [12,] 55.03 10.51 288.21 33.06 6.63 164.90 0.601 0.513 0.704 ## [13,] 167.37 61.90 452.51 34.09 14.83 78.35 0.204 0.134 0.310 ## [14,] 17.70 8.39 37.35 7.19 3.76 13.75 0.406 0.343 0.480 ## [15,] 3.12 1.10 8.87 1.78 0.99 3.21 0.571 0.349 0.937 ## [16,] 25.19 8.46 75.02 14.87 5.25 42.16 0.590 0.529 0.659 ## [17,] 48.69 8.71 272.15 21.80 4.40 107.92 0.448 0.323 0.621 ## [18,] 84.23 39.19 181.03 17.13 10.24 28.63 0.203 0.130 0.318 ## [19,] 32.51 8.78 120.38 15.18 4.45 51.77 0.467 0.384 0.568 ## [20,] 17.63 8.96 34.70 6.68 4.02 11.10 0.379 0.288 0.497 ## [21,] 1617.00 81.42 32114.41 21.72 7.80 60.48 0.013 0.001 0.211 ## [22,] 27.12 7.28 101.04 16.34 4.70 56.77 0.603 0.511 0.711 ## [23,] 20.84 9.57 45.41 9.39 4.66 18.93 0.450 0.388 0.523 ## [24,] 42.14 20.26 87.65 8.98 5.02 16.06 0.213 0.158 0.288 ## [25,] 116.01 47.68 282.27 35.67 17.27 73.70 0.307 0.214 0.442 ## [26,] 30.08 8.80 102.81 13.51 4.69 38.91 0.449 0.318 0.635 ## [27,] 11.10 5.33 23.10 6.40 3.51 11.66 0.576 0.472 0.705 ## [28,] 47.44 29.08 77.39 13.11 8.99 19.13 0.276 0.222 0.344 ## [29,] 19.26 10.39 35.68 10.43 6.15 17.71 0.542 0.463 0.634 ## [30,] 16.26 3.32 79.74 9.53 2.54 35.80 0.586 0.383 0.898 ## [31,] 55.49 33.71 91.32 7.79 5.31 11.41 0.140 0.112 0.176 ## [32,] 59.01 32.03 108.71 21.68 12.47 37.67 0.367 0.315 0.428 ## [33,] 25.77 13.72 48.41 12.50 7.27 21.50 0.485 0.409 0.576 ## [34,] 95.65 73.46 124.55 22.38 17.99 27.84 0.234 0.210 0.261 ## [35,] 85.12 39.59 183.00 36.43 17.77 74.70 0.428 0.369 0.496 ## [36,] 15.69 6.35 38.77 9.92 4.29 22.97 0.632 0.559 0.715 ## [37,] 37.27 17.12 81.11 20.17 9.79 41.57 0.541 0.473 0.619 ## ## Correlation of sensitivities and false positive rates: ## rho 2.5 % 97.5 % ## 0.273 -0.056 0.548 1b. Forest plot Then use the forest command to draw the forest plot. The split.screen function is used to split a plotting window into different rectangular sections called “screens”. Figure 3.1 is the forest plot of Nishiumra data. split.screen(c(1,2)) screen(1) forest(madad.nishimura, type = &quot;sens&quot;, xlab = &quot;Sensitivity&quot;, cex = .8, snames = nishimura$study_id) screen(2) forest(madad.nishimura, type = &quot;spec&quot;, xlab = &quot;Specificity&quot;, cex = .8, snames = nishimura$study_id) close.screen(all.screens = T) Figure 3.1: The forest plot of Nishiumra data. 1c. Bivariate Analysis Secondly, use the reitsma command to conduct a meta analysis by using bivariate model, and save the results in the object “bi.nishimura.” ## Bivariate Analysis ## bi.nishimura &lt;- reitsma(nishimura) summary(bi.nishimura) ## Call: reitsma.default(data = nishimura) ## ## Bivariate diagnostic random-effects meta-analysis ## Estimation method: REML ## ## Fixed-effects coefficients ## Estimate Std. Error z Pr(&gt;|z|) 95%ci.lb 95%ci.ub ## tsens.(Intercept) 0.606 0.118 5.123 0.000 0.374 0.838 ## tfpr.(Intercept) -2.941 0.137 -21.540 0.000 -3.209 -2.674 ## sensitivity 0.647 - - - 0.593 0.698 ## false pos. rate 0.050 - - - 0.039 0.065 ## ## tsens.(Intercept) *** ## tfpr.(Intercept) *** ## sensitivity ## false pos. rate ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Variance components: between-studies Std. Dev and correlation matrix ## Std. Dev tsens tfpr ## tsens 0.676 1.000 . ## tfpr 0.708 0.495 1.000 ## ## logLik AIC BIC ## 91.644 -173.287 -161.767 ## ## AUC: 0.916 ## Partial AUC (restricted to observed FPRs and normalized): 0.813 ## ## HSROC parameters ## Theta Lambda beta sigma2theta sigma2alpha ## -1.128 3.496 0.045 0.358 0.483 1d. SROC ## SROC ## plot(bi.nishimura, sroclwd = 2, main = &quot;SROC curve (bivariate model) for Nishimura data&quot;, pch = 16) points(fpr(nishimura), sens(nishimura), pch = 1, col = &quot;red&quot;) legend(&quot;bottomright&quot;, c(&quot;data&quot;, &quot;summary estimate&quot;), pch = c(1,16), col = c(&quot;red&quot;,&quot;black&quot;)) legend(&quot;topright&quot;, c(&quot;SROC&quot;, &quot;conf. region&quot;), lwd = c(2,1)) Figure 3.2: The SROC of Nishiumra data. "],
["exercise-2-tseng.html", "Exercise 2 - Tseng", " Exercise 2 - Tseng As with Exercise 1, we need to read in the csv file first. Table 3.2 is the first 5 rows of Tseng data. # Read data tseng &lt;- read.csv(&quot;~/Desktop/meta/Diagnostic Test/Tseng.csv&quot;) print(tseng) Table 3.2: A table of Tseng data. id TP FP FN TN country male smoker sens spec Toyoda et al, 2008 40 528 5 6610 Japan 59 78 88.9 92.6 Veronesi et al, 2008 55 7 20 5119 Italy 66 80 73.3 99.9 Menezes et al, 2009 50 17 7 2592 Canada 54 87 87.7 99.3 van Klaveren et al, 2009 70 1500 30 5957 Dutch 84 100 70.0 79.9 Aberle et al, 2011 270 6921 6 19112 American 59 100 97.8 73.4 2a. Descriptive First of all, use the madad command to descriptive summary of tseng data, and save the results in the object “madad.tseng” madad.tseng &lt;- madad(tseng) print(madad.tseng) ## Descriptive summary of tseng with 5 primary studies. ## Confidence level for all calculations set to 95 % ## Using a continuity correction of 0.5 if applicable ## ## Diagnostic accuracies ## sens 2.5% 97.5% spec 2.5% 97.5% ## [1,] 0.889 0.765 0.952 0.926 0.920 0.932 ## [2,] 0.733 0.624 0.820 0.999 0.997 0.999 ## [3,] 0.877 0.768 0.939 0.993 0.990 0.996 ## [4,] 0.700 0.604 0.781 0.799 0.790 0.808 ## [5,] 0.978 0.953 0.990 0.734 0.729 0.739 ## ## Test for equality of sensitivities: ## X-squared = 69.7, df = 4, p-value = 2.62e-14 ## Test for equality of specificities: ## X-squared = 3415, df = 4, p-value = &lt;2e-16 ## ## ## Diagnostic OR and likelihood ratios ## DOR 2.5% 97.5% posLR 2.5% 97.5% negLR 2.5% 97.5% ## [1,] 100.15 39.36 254.8 12.02 10.53 13.71 0.120 0.053 0.274 ## [2,] 2011.04 816.97 4950.3 537.01 252.97 1140.00 0.267 0.183 0.389 ## [3,] 1089.08 432.45 2742.7 134.62 83.00 218.36 0.124 0.062 0.247 ## [4,] 9.27 6.02 14.3 3.48 3.04 3.99 0.376 0.278 0.507 ## [5,] 124.27 55.31 279.2 3.68 3.58 3.78 0.030 0.013 0.065 ## ## Correlation of sensitivities and false positive rates: ## rho 2.5 % 97.5 % ## 0.268 -0.804 0.930 2b. Forest plot Then use the forest command to draw the forest plot. The split.screen function is used to split a plotting window into different rectangular sections called “screens”. Figure 3.3 is the forest plot of Tseng data. split.screen(c(1,2)) screen(1) forest(madad.tseng, type = &quot;sens&quot;, xlab = &quot;Sensitivity&quot;, cex = .8, snames = tseng$study_id) screen(2) forest(madad.tseng, type = &quot;spec&quot;, xlab = &quot;Specificity&quot;, cex = .8, snames = tseng$study_id) close.screen(all.screens = T) Figure 3.3: The forest plot of Tseng data. 2c. Bivariate Analysis ## Bivariate Analysis ## bi.tseng &lt;- reitsma(tseng) summary(bi.tseng) ## Call: reitsma.default(data = tseng) ## ## Bivariate diagnostic random-effects meta-analysis ## Estimation method: REML ## ## Fixed-effects coefficients ## Estimate Std. Error z Pr(&gt;|z|) 95%ci.lb 95%ci.ub ## tsens.(Intercept) 1.905 0.532 3.578 0.000 0.862 2.949 ## tfpr.(Intercept) -3.289 1.075 -3.061 0.002 -5.396 -1.183 ## sensitivity 0.870 - - - 0.703 0.950 ## false pos. rate 0.036 - - - 0.005 0.234 ## ## tsens.(Intercept) *** ## tfpr.(Intercept) ** ## sensitivity ## false pos. rate ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Variance components: between-studies Std. Dev and correlation matrix ## Std. Dev tsens tfpr ## tsens 1.134 1.000 . ## tfpr 2.395 0.455 1.000 ## ## logLik AIC BIC ## 12.656 -15.312 -13.799 ## ## AUC: 0.951 ## Partial AUC (restricted to observed FPRs and normalized): 0.909 ## ## HSROC parameters ## Theta Lambda beta sigma2theta sigma2alpha ## 0.252 5.032 0.747 1.977 2.958 2d. SROC ## SROC ## plot(bi.tseng, sroclwd = 2, main = &quot;SROC curve (bivariate model) for tseng data&quot;, pch = 16) points(fpr(tseng), sens(tseng), pch = 1, col = &quot;red&quot;) legend(&quot;bottomright&quot;, c(&quot;data&quot;, &quot;summary estimate&quot;), pch = c(1,16), col = c(&quot;red&quot;,&quot;black&quot;)) legend(&quot;bottomleft&quot;, c(&quot;SROC&quot;, &quot;conf. region&quot;), lwd = c(2,1)) Figure 3.4: The SROC of Tseng data. "],
["exercise-3-cbcl.html", "Exercise 3 - CBCL", " Exercise 3 - CBCL As with Exercise 1 and 2, we need to read in the csv file first. Table 3.3 is the first 5 rows of CBCL data. # Read data CBCL &lt;- read.csv(&quot;~/Desktop/meta/Diagnostic Test/CBCL.csv&quot;) print(CBCL) Table 3.3: A table of the first 5 rows of CBCL data. test study_id TP FP FN TN CBCL Derks et al. 2006-M 20 14 7 151 CBCL Derks et al. 2006-F 20 36 5 155 CBCL Edwards et al. 2015 38 17 11 29 CBCL Eiraldi et al. 2000 88 6 85 30 CBCL Elkins et al. 2014 17 2 6 21 3a. Descriptive First of all, use the madad command to descriptive summary of tseng data, and save the results in the object “madad.CBCL” madad.CBCL &lt;- madad(CBCL) print(madad.CBCL) ## Descriptive summary of CBCL with 16 primary studies. ## Confidence level for all calculations set to 95 % ## Using a continuity correction of 0.5 if applicable ## ## Diagnostic accuracies ## sens 2.5% 97.5% spec 2.5% 97.5% ## [1,] 0.741 0.553 0.868 0.915 0.863 0.949 ## [2,] 0.800 0.609 0.911 0.812 0.750 0.861 ## [3,] 0.776 0.641 0.870 0.630 0.486 0.755 ## [4,] 0.509 0.435 0.582 0.833 0.681 0.921 ## [5,] 0.739 0.535 0.875 0.913 0.732 0.976 ## [6,] 0.941 0.730 0.990 0.500 0.348 0.652 ## [7,] 0.585 0.434 0.722 0.876 0.832 0.911 ## [8,] 0.833 0.726 0.904 0.880 0.809 0.927 ## [9,] 0.727 0.558 0.849 0.385 0.177 0.645 ## [10,] 0.749 0.708 0.787 0.701 0.648 0.750 ## [11,] 0.714 0.605 0.803 0.811 0.743 0.865 ## [12,] 0.968 0.938 0.984 0.493 0.380 0.607 ## [13,] 0.851 0.786 0.898 0.533 0.449 0.615 ## [14,] 0.639 0.514 0.748 0.542 0.351 0.721 ## [15,] 0.639 0.545 0.723 0.487 0.378 0.597 ## [16,] 0.842 0.624 0.945 0.843 0.720 0.918 ## ## Test for equality of sensitivities: ## X-squared = 152, df = 15, p-value = &lt;2e-16 ## Test for equality of specificities: ## X-squared = 194, df = 15, p-value = &lt;2e-16 ## ## ## Diagnostic OR and likelihood ratios ## DOR 2.5% 97.5% posLR 2.5% 97.5% negLR 2.5% 97.5% ## [1,] 30.82 11.111 85.47 8.73 5.044 15.11 0.283 0.149 0.537 ## [2,] 17.22 6.057 48.97 4.24 2.980 6.04 0.246 0.112 0.541 ## [3,] 5.89 2.398 14.48 2.10 1.398 3.15 0.356 0.202 0.627 ## [4,] 5.18 2.051 13.06 3.05 1.449 6.43 0.590 0.478 0.728 ## [5,] 29.75 5.310 166.69 8.50 2.212 32.67 0.286 0.142 0.575 ## [6,] 16.00 1.924 133.03 1.88 1.341 2.64 0.118 0.017 0.809 ## [7,] 10.01 4.871 20.57 4.74 3.142 7.14 0.473 0.328 0.683 ## [8,] 36.79 15.647 86.48 6.96 4.211 11.52 0.189 0.110 0.326 ## [9,] 1.67 0.430 6.46 1.18 0.733 1.91 0.709 0.293 1.718 ## [10,] 7.02 5.083 9.70 2.51 2.097 3.00 0.357 0.300 0.426 ## [11,] 10.75 5.701 20.27 3.79 2.663 5.38 0.352 0.245 0.505 ## [12,] 29.17 12.539 67.84 1.91 1.516 2.40 0.065 0.032 0.135 ## [13,] 6.51 3.728 11.37 1.82 1.504 2.21 0.280 0.186 0.421 ## [14,] 2.10 0.804 5.46 1.40 0.868 2.24 0.666 0.405 1.095 ## [15,] 1.68 0.924 3.05 1.25 0.959 1.62 0.742 0.527 1.043 ## [16,] 28.67 6.753 121.69 5.37 2.760 10.44 0.187 0.066 0.533 ## ## Correlation of sensitivities and false positive rates: ## rho 2.5 % 97.5 % ## 0.265 -0.266 0.672 3b. Forest plot Then use the forest command to draw the forest plot. The split.screen function is used to split a plotting window into different rectangular sections called “screens”. Figure 3.5 is the forest plot of CBCL data. split.screen(c(1,2)) screen(1) forest(madad.CBCL, type = &quot;sens&quot;, xlab = &quot;Sensitivity&quot;, cex = .8, snames = CBCL$study_id) screen(2) forest(madad.CBCL, type = &quot;spec&quot;, xlab = &quot;Specificity&quot;, cex = .8, snames = CBCL$study_id) close.screen(all.screens = T) Figure 3.5: The forest plot of Tseng data. 3c. Bivariate Analysis Secondly, use the reitsma command to conduct a meta analysis by using bivariate model, and save the results in the object “bi.CBCL” ## Bivariate Analysis ## bi.CBCL &lt;- reitsma(CBCL) summary(bi.CBCL) ## Call: reitsma.default(data = CBCL) ## ## Bivariate diagnostic random-effects meta-analysis ## Estimation method: REML ## ## Fixed-effects coefficients ## Estimate Std. Error z Pr(&gt;|z|) 95%ci.lb 95%ci.ub ## tsens.(Intercept) 1.181 0.208 5.681 0.000 0.774 1.589 ## tfpr.(Intercept) -0.996 0.230 -4.335 0.000 -1.447 -0.546 ## sensitivity 0.765 - - - 0.684 0.830 ## false pos. rate 0.270 - - - 0.190 0.367 ## ## tsens.(Intercept) *** ## tfpr.(Intercept) *** ## sensitivity ## false pos. rate ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Variance components: between-studies Std. Dev and correlation matrix ## Std. Dev tsens tfpr ## tsens 0.744 1.000 . ## tfpr 0.858 0.372 1.000 ## ## logLik AIC BIC ## 17.589 -25.178 -17.849 ## ## AUC: 0.812 ## Partial AUC (restricted to observed FPRs and normalized): 0.78 ## ## HSROC parameters ## Theta Lambda beta sigma2theta sigma2alpha ## 0.171 2.197 0.144 0.438 0.802 3d. SROC ## SROC ## plot(bi.CBCL, sroclwd = 2, main = &quot;SROC curve (bivariate model) for CBCL data&quot;, pch = 16) points(fpr(nishimura), sens(nishimura), pch = 1, col = &quot;red&quot;) legend(&quot;bottomright&quot;, c(&quot;data&quot;, &quot;summary estimate&quot;), pch = c(1,16), col = c(&quot;red&quot;,&quot;black&quot;)) legend(&quot;topright&quot;, c(&quot;SROC&quot;, &quot;conf. region&quot;), lwd = c(2,1)) Figure 3.6: The SROC of CBCL data. "]
]
